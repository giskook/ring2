// Code generated by protoc-gen-go.
// source: out.proto
// DO NOT EDIT!

package Lbs

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Distribute struct {
	Header *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	// 0 解析成功 1 解析失败
	ParseResult string `protobuf:"bytes,2,opt,name=parse_result" json:"parse_result,omitempty"`
	Longitude   string `protobuf:"bytes,3,opt,name=longitude" json:"longitude,omitempty"`
	Latitude    string `protobuf:"bytes,4,opt,name=latitude" json:"latitude,omitempty"`
	// 附加数据  LocationExtra 序列化后的结果
	Extra []byte `protobuf:"bytes,5,opt,name=extra,proto3" json:"extra,omitempty"`
}

func (m *Distribute) Reset()                    { *m = Distribute{} }
func (m *Distribute) String() string            { return proto.CompactTextString(m) }
func (*Distribute) ProtoMessage()               {}
func (*Distribute) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Distribute) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Distribute) GetParseResult() string {
	if m != nil {
		return m.ParseResult
	}
	return ""
}

func (m *Distribute) GetLongitude() string {
	if m != nil {
		return m.Longitude
	}
	return ""
}

func (m *Distribute) GetLatitude() string {
	if m != nil {
		return m.Latitude
	}
	return ""
}

func (m *Distribute) GetExtra() []byte {
	if m != nil {
		return m.Extra
	}
	return nil
}

func init() {
	proto.RegisterType((*Distribute)(nil), "Lbs.Distribute")
}

func init() { proto.RegisterFile("out.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 152 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x24, 0xcd, 0xb1, 0x0a, 0xc2, 0x30,
	0x10, 0x00, 0x50, 0x62, 0x6d, 0xb1, 0xd7, 0x0a, 0x1a, 0x1c, 0x82, 0x2e, 0xc5, 0xa9, 0x53, 0x06,
	0xfd, 0x05, 0x07, 0x87, 0xfe, 0x83, 0x24, 0xf4, 0xd0, 0x40, 0x30, 0xe5, 0xee, 0x02, 0x7e, 0xbe,
	0x90, 0xae, 0x6f, 0x79, 0xd0, 0xa6, 0x2c, 0x76, 0xa1, 0x24, 0x49, 0x57, 0x93, 0xe7, 0x33, 0x78,
	0xc7, 0xb8, 0xc2, 0x95, 0x01, 0x1e, 0x81, 0x85, 0x82, 0xcf, 0x82, 0xfa, 0x02, 0xcd, 0x07, 0xdd,
	0x8c, 0x64, 0xd4, 0xa0, 0xc6, 0xee, 0xd6, 0xd9, 0xc9, 0xb3, 0x7d, 0x16, 0xd2, 0x27, 0xe8, 0x17,
	0x47, 0x8c, 0x2f, 0x42, 0xce, 0x51, 0xcc, 0x66, 0x50, 0x63, 0xab, 0x8f, 0xd0, 0xc6, 0xf4, 0x7d,
	0x07, 0xc9, 0x33, 0x9a, 0xaa, 0xd0, 0x01, 0x76, 0xd1, 0xc9, 0x2a, 0xdb, 0x22, 0x7b, 0xa8, 0xf1,
	0x27, 0xe4, 0x4c, 0x3d, 0xa8, 0xb1, 0xf7, 0x4d, 0xb9, 0xef, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x17, 0xc2, 0xfc, 0x9d, 0x99, 0x00, 0x00, 0x00,
}
