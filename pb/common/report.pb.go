// Code generated by protoc-gen-go.
// source: report.proto
// DO NOT EDIT!

package Carrier

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Report_Protocol int32

const (
	Report_UNKNOWN  Report_Protocol = 0
	Report_LOGIN    Report_Protocol = 1
	Report_LOCATION Report_Protocol = 2
	Report_LOWP     Report_Protocol = 3
	Report_RECEIPT  Report_Protocol = 4
	Report_ACK      Report_Protocol = 5
	Report_UPRESULT Report_Protocol = 6
)

var Report_Protocol_name = map[int32]string{
	0: "UNKNOWN",
	1: "LOGIN",
	2: "LOCATION",
	3: "LOWP",
	4: "RECEIPT",
	5: "ACK",
	6: "UPRESULT",
}
var Report_Protocol_value = map[string]int32{
	"UNKNOWN":  0,
	"LOGIN":    1,
	"LOCATION": 2,
	"LOWP":     3,
	"RECEIPT":  4,
	"ACK":      5,
	"UPRESULT": 6,
}

func (x Report_Protocol) String() string {
	return proto.EnumName(Report_Protocol_name, int32(x))
}
func (Report_Protocol) EnumDescriptor() ([]byte, []int) { return fileDescriptor18, []int{0, 0} }

type Report struct {
	Header   *Header         `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Protocol Report_Protocol `protobuf:"varint,2,opt,name=protocol,enum=Carrier.Report_Protocol" json:"protocol,omitempty"`
	Login    *ReportLogin    `protobuf:"bytes,3,opt,name=login" json:"login,omitempty"`
	Location *ReportLocation `protobuf:"bytes,4,opt,name=location" json:"location,omitempty"`
	Lowp     *ReportLowp     `protobuf:"bytes,6,opt,name=lowp" json:"lowp,omitempty"`
	Receipt  *ReportReceipt  `protobuf:"bytes,7,opt,name=receipt" json:"receipt,omitempty"`
	Ack      *ReportAck      `protobuf:"bytes,8,opt,name=ack" json:"ack,omitempty"`
	Upresult *ReportUpresult `protobuf:"bytes,9,opt,name=upresult" json:"upresult,omitempty"`
}

func (m *Report) Reset()                    { *m = Report{} }
func (m *Report) String() string            { return proto.CompactTextString(m) }
func (*Report) ProtoMessage()               {}
func (*Report) Descriptor() ([]byte, []int) { return fileDescriptor18, []int{0} }

func (m *Report) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Report) GetProtocol() Report_Protocol {
	if m != nil {
		return m.Protocol
	}
	return Report_UNKNOWN
}

func (m *Report) GetLogin() *ReportLogin {
	if m != nil {
		return m.Login
	}
	return nil
}

func (m *Report) GetLocation() *ReportLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Report) GetLowp() *ReportLowp {
	if m != nil {
		return m.Lowp
	}
	return nil
}

func (m *Report) GetReceipt() *ReportReceipt {
	if m != nil {
		return m.Receipt
	}
	return nil
}

func (m *Report) GetAck() *ReportAck {
	if m != nil {
		return m.Ack
	}
	return nil
}

func (m *Report) GetUpresult() *ReportUpresult {
	if m != nil {
		return m.Upresult
	}
	return nil
}

func init() {
	proto.RegisterType((*Report)(nil), "Carrier.Report")
	proto.RegisterEnum("Carrier.Report_Protocol", Report_Protocol_name, Report_Protocol_value)
}

func init() { proto.RegisterFile("report.proto", fileDescriptor18) }

var fileDescriptor18 = []byte{
	// 331 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x90, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0x86, 0x2d, 0x2d, 0x6d, 0x19, 0x88, 0xae, 0x23, 0xea, 0x86, 0x0b, 0x88, 0x07, 0xd1, 0x43,
	0x0f, 0xf8, 0x04, 0xa4, 0x21, 0x4a, 0x68, 0xda, 0xa6, 0xd2, 0x70, 0xd3, 0x94, 0xba, 0xd1, 0x06,
	0x62, 0x37, 0x0b, 0x84, 0xa7, 0xf1, 0x5d, 0x4d, 0xb7, 0x4b, 0x0f, 0xc5, 0xeb, 0xf7, 0x7f, 0x3b,
	0x3b, 0xff, 0x40, 0x47, 0x30, 0x9e, 0x8b, 0x9d, 0xc3, 0x45, 0xbe, 0xcb, 0xd1, 0x72, 0x13, 0x21,
	0x32, 0x26, 0x7a, 0xb0, 0x4a, 0xb6, 0xac, 0x84, 0x3d, 0x2c, 0x95, 0x8f, 0x4d, 0xfe, 0x95, 0xfd,
	0x28, 0x76, 0x5d, 0xb1, 0x34, 0xd9, 0x65, 0xf9, 0x11, 0x5f, 0x56, 0xf8, 0xc0, 0x15, 0xea, 0x2a,
	0x24, 0x58, 0xca, 0x32, 0xae, 0x3e, 0xea, 0x11, 0x45, 0x93, 0x74, 0x5d, 0x9b, 0xb8, 0xe7, 0x82,
	0x6d, 0xf7, 0x1b, 0x25, 0x0e, 0x7f, 0x75, 0x30, 0x23, 0x99, 0x60, 0x1f, 0xcc, 0x6f, 0x96, 0x7c,
	0x32, 0x41, 0xb5, 0x81, 0x36, 0x6a, 0x8f, 0x2f, 0x1c, 0xb5, 0xad, 0xf3, 0x2a, 0x31, 0x3e, 0x81,
	0x2d, 0x1f, 0xa5, 0xf9, 0x86, 0x36, 0x06, 0xda, 0xe8, 0x7c, 0x4c, 0x2b, 0xa5, 0x9c, 0xe1, 0x84,
	0x2a, 0xc7, 0x7b, 0x68, 0xca, 0x3e, 0x54, 0x97, 0xb3, 0xba, 0x35, 0xd1, 0x2b, 0x32, 0x7c, 0x04,
	0xfb, 0x58, 0x90, 0x1a, 0xd2, 0xbb, 0x3d, 0xf1, 0xca, 0x18, 0xef, 0xc0, 0x28, 0x4a, 0x53, 0x53,
	0x6a, 0x57, 0x27, 0xda, 0x81, 0xe3, 0x03, 0x58, 0xea, 0x08, 0xd4, 0x92, 0xd6, 0x4d, 0xcd, 0x8a,
	0xca, 0x14, 0xfb, 0xa0, 0x27, 0xe9, 0x9a, 0xda, 0x52, 0xc2, 0x9a, 0x34, 0x49, 0xd7, 0xc5, 0x5e,
	0xc7, 0x33, 0xd1, 0xd6, 0xbf, 0x7b, 0xc5, 0x2a, 0x1e, 0xbe, 0x83, 0x5d, 0x75, 0x6e, 0x83, 0x15,
	0xfb, 0x73, 0x3f, 0x58, 0xfa, 0xe4, 0x0c, 0x5b, 0xd0, 0xf4, 0x82, 0x97, 0x99, 0x4f, 0x34, 0xec,
	0x80, 0xed, 0x05, 0xee, 0x64, 0x31, 0x0b, 0x7c, 0xd2, 0x40, 0x1b, 0x0c, 0x2f, 0x58, 0x86, 0x44,
	0x2f, 0xfc, 0x68, 0xea, 0x4e, 0x67, 0xe1, 0x82, 0x18, 0x68, 0x81, 0x3e, 0x71, 0xe7, 0xa4, 0x59,
	0xd8, 0x71, 0x18, 0x4d, 0xdf, 0x62, 0x6f, 0x41, 0xcc, 0x95, 0x29, 0x2f, 0xfe, 0xfc, 0x17, 0x00,
	0x00, 0xff, 0xff, 0x9b, 0x1e, 0xbe, 0x90, 0x48, 0x02, 0x00, 0x00,
}
