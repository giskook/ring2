// Code generated by protoc-gen-go.
// source: report_location.proto
// DO NOT EDIT!

package Carrier

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 最终抛给上层服务的结构,考虑到解析位置服务的独立性，将其他的数据都作为Extra数据进行处理
type ReportLocation struct {
	// 附加数据  LocationExtra 序列化后的结果
	Extra     []byte `protobuf:"bytes,1,opt,name=extra,proto3" json:"extra,omitempty"`
	Longitude string `protobuf:"bytes,2,opt,name=longitude" json:"longitude,omitempty"`
	Latitude  string `protobuf:"bytes,3,opt,name=latitude" json:"latitude,omitempty"`
	Speed     string `protobuf:"bytes,4,opt,name=speed" json:"speed,omitempty"`
}

func (m *ReportLocation) Reset()                    { *m = ReportLocation{} }
func (m *ReportLocation) String() string            { return proto.CompactTextString(m) }
func (*ReportLocation) ProtoMessage()               {}
func (*ReportLocation) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{0} }

func (m *ReportLocation) GetExtra() []byte {
	if m != nil {
		return m.Extra
	}
	return nil
}

func (m *ReportLocation) GetLongitude() string {
	if m != nil {
		return m.Longitude
	}
	return ""
}

func (m *ReportLocation) GetLatitude() string {
	if m != nil {
		return m.Latitude
	}
	return ""
}

func (m *ReportLocation) GetSpeed() string {
	if m != nil {
		return m.Speed
	}
	return ""
}

func init() {
	proto.RegisterType((*ReportLocation)(nil), "Carrier.ReportLocation")
}

func init() { proto.RegisterFile("report_location.proto", fileDescriptor15) }

var fileDescriptor15 = []byte{
	// 129 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x2d, 0x4a, 0x2d, 0xc8,
	0x2f, 0x2a, 0x89, 0xcf, 0xc9, 0x4f, 0x4e, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0x62, 0x77, 0x4e, 0x2c, 0x2a, 0xca, 0x4c, 0x2d, 0x52, 0x0a, 0xe6, 0xe2, 0x0b, 0x02,
	0xab, 0xf0, 0x81, 0x2a, 0x10, 0xe2, 0xe5, 0x62, 0x4d, 0xad, 0x28, 0x29, 0x4a, 0x94, 0x60, 0x54,
	0x60, 0xd4, 0xe0, 0x11, 0x12, 0xe4, 0xe2, 0xcc, 0xc9, 0xcf, 0x4b, 0xcf, 0x2c, 0x29, 0x4d, 0x49,
	0x95, 0x60, 0x52, 0x60, 0xd4, 0xe0, 0x14, 0x12, 0xe0, 0xe2, 0xc8, 0x49, 0x2c, 0x81, 0x88, 0x30,
	0x83, 0x45, 0x78, 0xb9, 0x58, 0x8b, 0x0b, 0x52, 0x53, 0x53, 0x24, 0x58, 0x40, 0xdc, 0x24, 0x36,
	0xb0, 0x25, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa7, 0x58, 0xaa, 0x02, 0x7d, 0x00, 0x00,
	0x00,
}
