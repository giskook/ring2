// Code generated by protoc-gen-go.
// source: distribute_upgrade.proto
// DO NOT EDIT!

package Carrier

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type DistributeUpgrade struct {
	// imei
	Imei string `protobuf:"bytes,1,opt,name=imei" json:"imei,omitempty"`
	// 序列号
	Serial   string `protobuf:"bytes,2,opt,name=serial" json:"serial,omitempty"`
	Ip       string `protobuf:"bytes,3,opt,name=ip" json:"ip,omitempty"`
	Port     string `protobuf:"bytes,4,opt,name=port" json:"port,omitempty"`
	User     string `protobuf:"bytes,5,opt,name=user" json:"user,omitempty"`
	Passwd   string `protobuf:"bytes,6,opt,name=passwd" json:"passwd,omitempty"`
	Filename string `protobuf:"bytes,7,opt,name=filename" json:"filename,omitempty"`
}

func (m *DistributeUpgrade) Reset()                    { *m = DistributeUpgrade{} }
func (m *DistributeUpgrade) String() string            { return proto.CompactTextString(m) }
func (*DistributeUpgrade) ProtoMessage()               {}
func (*DistributeUpgrade) Descriptor() ([]byte, []int) { return fileDescriptor13, []int{0} }

func (m *DistributeUpgrade) GetImei() string {
	if m != nil {
		return m.Imei
	}
	return ""
}

func (m *DistributeUpgrade) GetSerial() string {
	if m != nil {
		return m.Serial
	}
	return ""
}

func (m *DistributeUpgrade) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *DistributeUpgrade) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *DistributeUpgrade) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *DistributeUpgrade) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

func (m *DistributeUpgrade) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func init() {
	proto.RegisterType((*DistributeUpgrade)(nil), "Carrier.DistributeUpgrade")
}

func init() { proto.RegisterFile("distribute_upgrade.proto", fileDescriptor13) }

var fileDescriptor13 = []byte{
	// 153 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x3c, 0x8e, 0xb1, 0xca, 0x02, 0x31,
	0x10, 0x84, 0xb9, 0xfb, 0xf3, 0xe7, 0x74, 0x39, 0x44, 0x53, 0x6d, 0x29, 0x56, 0x56, 0x36, 0x3e,
	0x82, 0xbe, 0x82, 0xb5, 0xe4, 0xc8, 0x2a, 0x0b, 0x77, 0x26, 0xec, 0x26, 0x58, 0xf8, 0xf2, 0x62,
	0xe4, 0xec, 0xe6, 0x1b, 0xbe, 0x81, 0x01, 0x0c, 0xac, 0x59, 0x78, 0x28, 0x99, 0xae, 0x25, 0xdd,
	0xc5, 0x07, 0x3a, 0x24, 0x89, 0x39, 0xba, 0xee, 0xe4, 0x45, 0x98, 0x64, 0xf7, 0x82, 0xcd, 0xf9,
	0x27, 0x5d, 0xbe, 0x8e, 0xeb, 0xc1, 0xf0, 0x44, 0x8c, 0xcd, 0xb6, 0xd9, 0x2f, 0xdd, 0x0a, 0xac,
	0x92, 0xb0, 0x1f, 0xb1, 0xad, 0x0c, 0xd0, 0x72, 0xc2, 0xbf, 0x9a, 0x7b, 0x30, 0x29, 0x4a, 0x46,
	0x33, 0x53, 0x51, 0x12, 0xfc, 0x9f, 0x77, 0xc9, 0xab, 0x3e, 0x03, 0xda, 0xca, 0x6b, 0x58, 0xdc,
	0x78, 0xa4, 0x87, 0x9f, 0x08, 0xbb, 0x4f, 0x33, 0xd8, 0x7a, 0xe6, 0xf8, 0x0e, 0x00, 0x00, 0xff,
	0xff, 0x8f, 0x79, 0x36, 0x59, 0xa8, 0x00, 0x00, 0x00,
}
