// Code generated by protoc-gen-go.
// source: report_upresult.proto
// DO NOT EDIT!

package Carrier

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ReportUpresult struct {
	// imei
	Imei string `protobuf:"bytes,1,opt,name=imei" json:"imei,omitempty"`
	// 序列号对应平台发送升级协议的序列号
	Serial string `protobuf:"bytes,2,opt,name=serial" json:"serial,omitempty"`
	// 升级结果，目前仅当失败是终端才发送 这个字段的值始终是1(失败)
	Result string `protobuf:"bytes,3,opt,name=result" json:"result,omitempty"`
}

func (m *ReportUpresult) Reset()                    { *m = ReportUpresult{} }
func (m *ReportUpresult) String() string            { return proto.CompactTextString(m) }
func (*ReportUpresult) ProtoMessage()               {}
func (*ReportUpresult) Descriptor() ([]byte, []int) { return fileDescriptor20, []int{0} }

func (m *ReportUpresult) GetImei() string {
	if m != nil {
		return m.Imei
	}
	return ""
}

func (m *ReportUpresult) GetSerial() string {
	if m != nil {
		return m.Serial
	}
	return ""
}

func (m *ReportUpresult) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*ReportUpresult)(nil), "Carrier.ReportUpresult")
}

func init() { proto.RegisterFile("report_upresult.proto", fileDescriptor20) }

var fileDescriptor20 = []byte{
	// 105 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x2d, 0x4a, 0x2d, 0xc8,
	0x2f, 0x2a, 0x89, 0x2f, 0x2d, 0x28, 0x4a, 0x2d, 0x2e, 0xcd, 0x29, 0xd1, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0x62, 0x77, 0x4e, 0x2c, 0x2a, 0xca, 0x4c, 0x2d, 0x52, 0xb2, 0xe3, 0xe2, 0x0b, 0x02,
	0xab, 0x08, 0x85, 0x2a, 0x10, 0xe2, 0xe1, 0x62, 0xc9, 0xcc, 0x4d, 0xcd, 0x94, 0x60, 0x54, 0x60,
	0xd4, 0xe0, 0x14, 0xe2, 0xe3, 0x62, 0x2b, 0x4e, 0x2d, 0xca, 0x4c, 0xcc, 0x91, 0x60, 0x82, 0xf1,
	0x21, 0xea, 0x24, 0x98, 0x41, 0xfc, 0x24, 0x36, 0xb0, 0x79, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xae, 0x3f, 0x73, 0x80, 0x68, 0x00, 0x00, 0x00,
}
